import numpy as np

def calculate(list):
    if len(list) < 9:
        raise ValueError("List must contain nine numbers.")
    matA=np.reshape(list,(3,3))
    #MEAN
    mean_axis0=matA.mean(axis=0)
    mean_axis1=matA.mean(axis=1)
    mean=matA.sum()/matA.size

    #VARIANCE
    var_axis0=matA.var(axis=0)
    var_axis1=matA.var(axis=1)
    var=matA.var()

    #STANDARD DEVIATION
    std_axis0=matA.std(axis=0)
    std_axis1=matA.std(axis=1)
    std=matA.std()
    
    #MAX
    max_axis0=matA.max(axis=0)
    max_axis1=matA.max(axis=1)
    max=matA.max()
    
    #MIN
    min_axis0=matA.min(axis=0)
    min_axis1=matA.min(axis=1)
    min=matA.min()
    
    #SUM
    sum_axis0=matA.sum(axis=0)
    sum_axis1=matA.sum(axis=1)
    sum=matA.sum()

    calculations={}
    calculations['mean']=[mean_axis0.tolist(),mean_axis1.tolist(),mean]
    calculations['variance']=[var_axis0.tolist(),var_axis1.tolist(),var]
    calculations['standard deviation']=[std_axis0.tolist(),std_axis1.tolist(),std]
    calculations['max']=[max_axis0.tolist(),max_axis1.tolist(),max]
    calculations['min']=[min_axis0.tolist(),min_axis1.tolist(),min]
    calculations['sum']=[sum_axis0.tolist(),sum_axis1.tolist(),sum]

    return calculations
